//
//  Emojis.swift
//  Emoji Dictionary
//
//  Created by Denis Bystruev on 11/04/2019.
//  Copyright ¬© 2019 Denis Bystruev. All rights reserved.
//
import Foundation

typealias Emojis = [Emoji]

extension Emojis {
    var title: String {
        return "–°–ª–æ–≤–∞—Ä—å –≠–º–æ–¥–∑–∏"
    }
    
    static func loadSample() -> Emojis {
        return [
            Emoji(symbol: "üëª", name: "–ü—Ä–∏–≤–∏–¥–µ–Ω–∏–µ", description: "–°–µ—Ä–µ–Ω—å–∫–æ–µ –ø—Ä–∏–≤–∏–¥–µ–Ω–∏–µ", usage: "–ù–∞–ø—É–≥–∞–Ω"),
            Emoji(symbol: "ü§ì", name: "–ë–æ—Ç–∞–Ω–∏–∫", description: "–°–º–∞–π–ª–∏–∫ –≤ –æ—á–∫–∞—Ö", usage: "–£–º–Ω—ã–π"),
            Emoji(symbol: "üåè", name: "–ó–µ–º–ª—è", description: "–ó–µ–º–Ω–æ–π —à–∞—Ä", usage: "–ì–ª–æ–±–∞–ª—å–Ω–æ—Å—Ç—å"),
            Emoji(symbol: "‚≠êÔ∏è", name: "–ó–≤–µ–∑–¥–∞", description: "–ñ—ë–ª—Ç–∞—è –ø—è—Ç–∏–∫–æ–Ω–µ—á–Ω–∞—è –∑–≤–µ–∑–¥–∞ —Å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º", usage: "–í—ã—à–µ —Ç–æ–ª—å–∫–æ –∑–≤—ë–∑–¥—ã"),
        ]
    }
}

extension Emojis {
    var encode: Data? {
        let encoder = PropertyListEncoder()
        
        return try? encoder.encode(self)
    }
    
    init?(from data: Data) {
        let decoder = PropertyListDecoder()
        
        guard let currentEmojis = try? decoder.decode(Emojis.self, from: data) else { return nil }
        
        self = currentEmojis
    }
}
